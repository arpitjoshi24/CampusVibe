import nodemailer from 'nodemailer';
import dotenv from 'dotenv';

dotenv.config();

export const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER, // Backend Gmail account for SMTP
    pass: process.env.EMAIL_PASS,
  },
});

export const sendRequirementMail = async (requirement) => {
  const {
    department,
    eventName,
    coordinatorName,
    coordinatorEmail,
    coordinatorPhone,
    requirements,
    eventDate,
    message,
    authorizedHeadEmail,
    consultEmail,
  } = requirement;

  const htmlBody = `
    <h2>ðŸ“¢ New Event Resource Request Submitted</h2>
    <p><strong>Department:</strong> ${department}</p>
    <p><strong>Event Name:</strong> ${eventName}</p>
    <p><strong>Coordinator:</strong> ${coordinatorName}</p>
    <p><strong>Email:</strong> ${coordinatorEmail}</p>
    <p><strong>Phone:</strong> ${coordinatorPhone}</p>
    <p><strong>Event Date:</strong> ${new Date(eventDate).toLocaleDateString()}</p>
    <hr>
    <h3>Requirements:</h3>
    <ul>
      ${Object.entries(requirements)
        .map(([key, val]) =>
          val && key !== 'others' ? `<li>${key}</li>` : ''
        )
        .join('')}
    </ul>
    <p><strong>Others:</strong> ${requirements.others || 'None'}</p>
    <p><strong>Message:</strong> ${message || 'No additional message provided.'}</p>
    <hr>
    <p>âœ… This message was automatically generated by <b>CampusVibe System</b>.</p>
  `;

  // âœ… Send to consultant and authorized head
  const recipients = [consultEmail, authorizedHeadEmail].filter(Boolean);

  const mailOptions = {
    from: `"${coordinatorName} (CampusVibe)" <${process.env.EMAIL_USER}>`,
    replyTo: coordinatorEmail,
    to: recipients,
    subject: `New Event Requirement: ${eventName}`,
    html: htmlBody,
  };

  await transporter.sendMail(mailOptions);
};
